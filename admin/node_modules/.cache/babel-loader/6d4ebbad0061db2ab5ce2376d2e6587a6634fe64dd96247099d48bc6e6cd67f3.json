{"ast":null,"code":"var _jsxFileName = \"/Users/samratmalla/Downloads/mern ecommerce 2/admin/src/components/AddProducts.jsx\",\n  _s = $RefreshSig$();\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { addProducts } from '../redux/apiCalls.js';\nimport { useDispatch } from 'react-redux';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AddProducts = () => {\n  _s();\n  const [name, setName] = useState(\"\");\n  const [category, setCategory] = useState(\"\");\n  const [price, setPrice] = useState(\"\");\n  const [star, setStar] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [image, setImage] = useState(null);\n  const [imageOne, setImageOne] = useState(null);\n  const [error, setError] = useState(null);\n  const [success, setSuccess] = useState(null);\n  const dispatch = useDispatch();\n  const addProduct = async e => {\n    e.preventDefault();\n    const newUrl = {};\n    const newUrlOne = {};\n\n    //upload image\n    if (image) {\n      const data = new FormData();\n      const fileName = Date.now() + image.name; //for name of image\n      data.append('name', fileName);\n      data.append('file', image);\n      newUrl.image = fileName;\n      try {\n        await axios.post('/api/upload', data);\n        setSuccess('Images uploaded successfully!');\n      } catch (error) {\n        setError('Error. Images not uploaded!');\n      }\n    }\n\n    //upload imageOne\n    if (imageOne) {\n      const dataOne = new FormData();\n      const fileNameOne = Date.now() + imageOne.name; //for name of image\n      dataOne.append('name', fileNameOne);\n      dataOne.append('file', imageOne);\n      newUrlOne.imageOne = fileNameOne;\n      try {\n        await axios.post('/api/upload', dataOne);\n        setSuccess('Images uploaded successfully!');\n      } catch (error) {\n        setError('Error. Images not uploaded!');\n      }\n    }\n\n    //add product\n    try {\n      const result = addProducts(dispatch, {\n        name,\n        category,\n        price,\n        star,\n        description,\n        image: newUrl.image,\n        imageOne: newUrlOne.imageOne\n      });\n      if (result) {\n        setSuccess('Product successfully added!');\n      }\n    } catch (error) {\n      setError(\"Error. Product not added!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"formSign\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"formSignDiv\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: addProduct,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"formSignGroups\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setName(e.target.value),\n            placeholder: \"Product Name\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setCategory(e.target.value),\n            placeholder: \"Product Category\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setPrice(e.target.value),\n            placeholder: \"Product Price\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setStar(e.target.value),\n            placeholder: \"Product Star\",\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n            name: \"\",\n            onChange: e => setDescription(e.target.value),\n            id: \"\",\n            cols: \"30\",\n            rows: \"10\",\n            placeholder: \"Product Description\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Select Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image\",\n              accept: \".png, .jpg, .jpeg\",\n              onChange: e => setImage(e.target.files[0]),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n              htmlFor: \"image1\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Select Another Image\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"file\",\n              id: \"image1\",\n              accept: \".png, .jpg, .jpeg\",\n              onChange: e => setImageOne(e.target.files[0]),\n              required: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"Add Product\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"error\",\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 21\n        }, this), success && /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"success\",\n          children: success\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 23\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n};\n_s(AddProducts, \"7duBkM14LxPXMPtpCTmQbWrZ1r0=\", false, function () {\n  return [useDispatch];\n});\n_c = AddProducts;\nexport default AddProducts;\nvar _c;\n$RefreshReg$(_c, \"AddProducts\");","map":{"version":3,"names":["React","useState","axios","addProducts","useDispatch","AddProducts","name","setName","category","setCategory","price","setPrice","star","setStar","description","setDescription","image","setImage","imageOne","setImageOne","error","setError","success","setSuccess","dispatch","addProduct","e","preventDefault","newUrl","newUrlOne","data","FormData","fileName","Date","now","append","post","dataOne","fileNameOne","result","target","value","files"],"sources":["/Users/samratmalla/Downloads/mern ecommerce 2/admin/src/components/AddProducts.jsx"],"sourcesContent":["import React from 'react'\r\nimport { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { addProducts } from '../redux/apiCalls.js';\r\nimport { useDispatch } from 'react-redux'\r\n\r\nconst AddProducts = () => {\r\n\r\n  const [name, setName] = useState(\"\");\r\n  const [category, setCategory] = useState(\"\");\r\n  const [price, setPrice] = useState(\"\");\r\n  const [star, setStar] = useState(\"\");\r\n  const [description, setDescription] = useState(\"\");\r\n  const [image, setImage] = useState(null);\r\n  const [imageOne, setImageOne] = useState(null);\r\n  const [error, setError] = useState(null);\r\n  const [success, setSuccess] = useState(null);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const addProduct = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const newUrl = {};\r\n    const newUrlOne = {};\r\n\r\n    //upload image\r\n    if (image) {\r\n      const data = new FormData();\r\n      const fileName = Date.now() + image.name; //for name of image\r\n      data.append('name', fileName);\r\n      data.append('file', image);\r\n      newUrl.image = fileName;\r\n\r\n      try {\r\n\r\n        await axios.post('/api/upload', data);\r\n        setSuccess('Images uploaded successfully!');\r\n\r\n      } catch (error) {\r\n        setError('Error. Images not uploaded!');\r\n      }\r\n    }\r\n\r\n    //upload imageOne\r\n    if (imageOne) {\r\n      const dataOne = new FormData();\r\n      const fileNameOne = Date.now() + imageOne.name; //for name of image\r\n      dataOne.append('name', fileNameOne);\r\n      dataOne.append('file', imageOne);\r\n      newUrlOne.imageOne = fileNameOne;\r\n\r\n      try {\r\n\r\n        await axios.post('/api/upload', dataOne);\r\n        setSuccess('Images uploaded successfully!');\r\n\r\n      } catch (error) {\r\n        setError('Error. Images not uploaded!');\r\n      }\r\n    }\r\n\r\n\r\n    //add product\r\n    try {\r\n\r\n      const result = addProducts(dispatch, { name, category, price, star, description, image: newUrl.image, imageOne: newUrlOne.imageOne });\r\n\r\n      if (result) {\r\n        setSuccess('Product successfully added!');\r\n      }\r\n\r\n    } catch (error) {\r\n      setError(\"Error. Product not added!\");\r\n    }\r\n\r\n  }\r\n\r\n  return (\r\n    <div className='formSign'>\r\n      <div className=\"formSignDiv\">\r\n        <form onSubmit={addProduct}>\r\n          <div className=\"formSignGroups\">\r\n            <input type=\"text\" onChange={(e) => setName(e.target.value)} placeholder='Product Name' required />\r\n            <input type=\"text\" onChange={(e) => setCategory(e.target.value)} placeholder='Product Category' required />\r\n            <input type=\"text\" onChange={(e) => setPrice(e.target.value)} placeholder='Product Price' required />\r\n            <input type=\"text\" onChange={(e) => setStar(e.target.value)} placeholder='Product Star' required />\r\n            <textarea name=\"\" onChange={(e) => setDescription(e.target.value)} id=\"\" cols=\"30\" rows=\"10\" placeholder='Product Description'></textarea>\r\n            <div>\r\n              <label htmlFor=\"image\">\r\n                <span>Select Image</span>\r\n              </label>\r\n              <input type=\"file\" id='image' accept='.png, .jpg, .jpeg' onChange={(e) => setImage(e.target.files[0])} required />\r\n              <label htmlFor=\"image1\">\r\n                <span>Select Another Image</span>\r\n              </label>\r\n              <input type=\"file\" id='image1' accept='.png, .jpg, .jpeg' onChange={(e) => setImageOne(e.target.files[0])} required />\r\n            </div>\r\n          </div>\r\n          <button>Add Product</button>\r\n          {error && <span className='error'>{error}</span>}\r\n          {success && <span className='success'>{success}</span>}\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default AddProducts"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}